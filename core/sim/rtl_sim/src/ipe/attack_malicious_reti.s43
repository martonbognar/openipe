; The attacker cannot bypass the entry point restrictions by setting up a fake
; stack and performing a `reti` instruction.

.include "pmem_defs.asm"

    .global main
    .sect .data
stack:
    .word 0, 0, 0, 0

    .sect .text
main:
    mov #0x0800, &MPUIPSEGB1
    mov #0x0810, &MPUIPSEGB2
    mov #0x0060, &MPUIPC0
    mov #0xcafe, r12
    ; set up fake stack for reti with entry address
    mov #entry_point, &stack+2
    mov r2, &stack+4
    mov #stack, r1
    eint
    reti

do_entry_violation:
    mov #end_of_test, &rst_vector
    mov #0xbeef, r12

    ; set up fake stack for reti with middle address
    mov #other_code+4, &stack+2
    mov r2, &stack+4
    mov #stack, r1
    eint
    reti

        /* ----------------------         END OF TEST        --------------- */
end_of_test:
    nop
    br #0xffff

    .sect .ipe_seg, "a"
other_code:
    .word 1, 2, 3, 4
entry_point:
    mov #42, r13
    mov #42, r14
    mov #42, r15
    br #do_entry_violation

        /* ----------------------         INTERRUPT VECTORS  --------------- */

.section .vectors, "a"
.word end_of_test    ; Interrupt  0 (lowest priority)    <unused>
.word end_of_test    ; Interrupt  1                      <unused>
.word end_of_test    ; Interrupt  2                      <unused>
.word end_of_test    ; Interrupt  3                      <unused>
.word end_of_test    ; Interrupt  4                      <unused>
.word end_of_test    ; Interrupt  5                      <unused>
.word end_of_test    ; Interrupt  6                      <unused>
.word end_of_test    ; Interrupt  7                      <unused>
.word end_of_test    ; Interrupt  8                      <unused>
.word end_of_test    ; Interrupt  9                      <unused>
.word end_of_test    ; Interrupt 10                      Watchdog timer
.word end_of_test    ; Interrupt 11                      <unused>
.word end_of_test    ; Interrupt 12                      <unused>
.word end_of_test    ; Interrupt 13                      <unused>
.word end_of_test    ; Interrupt 14                      NMI
rst_vector:
.word main           ; Interrupt 15 (highest priority)   RESET
